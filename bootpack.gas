	.file	"bootpack.c"
	.text
	.balign 2
.globl _set_palette
	.def	_set_palette;	.scl	2;	.type	32;	.endef
_set_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	movl	8(%ebp), %ebx
	movl	12(%ebp), %edi
	movl	16(%ebp), %esi
	call	_io_load_eflags
	movl	%eax, -16(%ebp)
	call	_io_cli
	pushl	%ebx
	pushl	$968
	call	_io_out8
	cmpl	%edi, %ebx
	popl	%eax
	popl	%edx
	jge	L8
	subl	%ebx, %edi
	movl	%edi, %ebx
L6:
	movb	(%esi), %al
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	1(%esi), %al
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	2(%esi), %al
	shrb	$2, %al
	addl	$3, %esi
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	addl	$24, %esp
	decl	%ebx
	jne	L6
L8:
	movl	-16(%ebp), %eax
	movl	%eax, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_io_store_eflags
	.data
_table_rgb.0:
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-58
	.byte	-58
	.byte	-58
	.byte	-124
	.byte	0
	.byte	0
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	0
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
	.text
	.balign 2
.globl _init_palette
	.def	_init_palette;	.scl	2;	.type	32;	.endef
_init_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$_table_rgb.0
	pushl	$15
	pushl	$0
	call	_set_palette
	leave
	ret
	.balign 2
.globl _boxFill8
	.def	_boxFill8;	.scl	2;	.type	32;	.endef
_boxFill8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%edi
	pushl	%edi
	movb	16(%ebp), %al
	movl	24(%ebp), %ecx
	movl	28(%ebp), %edi
	movb	%al, -13(%ebp)
	cmpl	32(%ebp), %ecx
	jg	L22
	movl	12(%ebp), %ebx
	imull	%ecx, %ebx
L20:
	movl	20(%ebp), %edx
	cmpl	%edi, %edx
	jg	L24
	movl	8(%ebp), %esi
	addl	%ebx, %esi
	addl	%edx, %esi
	movl	%esi, -20(%ebp)
L19:
	movl	-20(%ebp), %esi
	movb	-13(%ebp), %al
	incl	%edx
	movb	%al, (%esi)
	incl	%esi
	movl	%esi, -20(%ebp)
	cmpl	%edi, %edx
	jle	L19
L24:
	incl	%ecx
	addl	12(%ebp), %ebx
	cmpl	32(%ebp), %ecx
	jle	L20
L22:
	popl	%ebx
	popl	%esi
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _putFont8
	.def	_putFont8;	.scl	2;	.type	32;	.endef
_putFont8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	movl	28(%ebp), %edi
	movb	24(%ebp), %bl
L38:
	movl	20(%ebp), %eax
	movl	16(%ebp), %edx
	addl	%esi, %eax
	imull	12(%ebp), %eax
	addl	8(%ebp), %eax
	leal	(%edx,%eax), %ecx
	movb	(%esi,%edi), %dl
	testb	%dl, %dl
	jns	L30
	movb	%bl, (%ecx)
L30:
	movb	%dl, %al
	andl	$64, %eax
	testb	%al, %al
	je	L31
	movb	%bl, 1(%ecx)
L31:
	movb	%dl, %al
	andl	$32, %eax
	testb	%al, %al
	je	L32
	movb	%bl, 2(%ecx)
L32:
	movb	%dl, %al
	andl	$16, %eax
	testb	%al, %al
	je	L33
	movb	%bl, 3(%ecx)
L33:
	movb	%dl, %al
	andl	$8, %eax
	testb	%al, %al
	je	L34
	movb	%bl, 4(%ecx)
L34:
	movb	%dl, %al
	andl	$4, %eax
	testb	%al, %al
	je	L35
	movb	%bl, 5(%ecx)
L35:
	movb	%dl, %al
	andl	$2, %eax
	testb	%al, %al
	je	L36
	movb	%bl, 6(%ecx)
L36:
	andl	$1, %edx
	testb	%dl, %dl
	je	L28
	movb	%bl, 7(%ecx)
L28:
	incl	%esi
	cmpl	$15, %esi
	jle	L38
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _init_GUI
	.def	_init_GUI;	.scl	2;	.type	32;	.endef
_init_GUI:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$12, %esp
	movl	16(%ebp), %eax
	movl	12(%ebp), %edi
	subl	$29, %eax
	decl	%edi
	pushl	%eax
	pushl	%edi
	pushl	$0
	pushl	$0
	pushl	$14
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	movl	16(%ebp), %eax
	subl	$28, %eax
	pushl	%eax
	pushl	%edi
	pushl	%eax
	pushl	$0
	pushl	$8
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	movl	16(%ebp), %eax
	addl	$56, %esp
	subl	$27, %eax
	pushl	%eax
	pushl	%edi
	pushl	%eax
	pushl	$0
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	movl	16(%ebp), %eax
	decl	%eax
	pushl	%eax
	movl	16(%ebp), %eax
	pushl	%edi
	subl	$26, %eax
	pushl	%eax
	pushl	$0
	pushl	$8
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	movl	16(%ebp), %esi
	addl	$56, %esp
	subl	$24, %esi
	pushl	%esi
	pushl	$59
	pushl	%esi
	pushl	$3
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	movl	16(%ebp), %eax
	subl	$4, %eax
	pushl	%eax
	movl	%eax, -16(%ebp)
	pushl	$2
	pushl	%esi
	pushl	$2
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	addl	$56, %esp
	pushl	-16(%ebp)
	pushl	$59
	pushl	-16(%ebp)
	pushl	$3
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	movl	16(%ebp), %eax
	subl	$5, %eax
	pushl	%eax
	movl	16(%ebp), %eax
	pushl	$59
	subl	$23, %eax
	pushl	%eax
	movl	%eax, -20(%ebp)
	pushl	$59
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	movl	16(%ebp), %eax
	addl	$56, %esp
	subl	$3, %eax
	movl	%eax, -24(%ebp)
	pushl	%eax
	pushl	$59
	pushl	%eax
	pushl	$2
	pushl	$0
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	pushl	-24(%ebp)
	pushl	$60
	pushl	%esi
	pushl	$60
	pushl	$0
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	movl	12(%ebp), %edi
	addl	$56, %esp
	movl	12(%ebp), %ebx
	subl	$4, %ebx
	subl	$47, %edi
	pushl	%esi
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	pushl	-16(%ebp)
	pushl	%edi
	pushl	-20(%ebp)
	pushl	%edi
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	addl	$56, %esp
	pushl	-24(%ebp)
	pushl	%ebx
	pushl	-24(%ebp)
	pushl	%edi
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	movl	12(%ebp), %eax
	pushl	-24(%ebp)
	subl	$3, %eax
	pushl	%eax
	pushl	%esi
	pushl	%eax
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxFill8
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _putFont8_asc
	.def	_putFont8_asc;	.scl	2;	.type	32;	.endef
_putFont8_asc:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%eax
	movl	28(%ebp), %ebx
	movb	24(%ebp), %al
	movb	%al, -13(%ebp)
	movl	16(%ebp), %esi
	movl	20(%ebp), %edi
	cmpb	$0, (%ebx)
	jne	L47
L49:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L47:
	movzbl	(%ebx), %eax
	sall	$4, %eax
	incl	%ebx
	addl	$_font, %eax
	pushl	%eax
	movsbl	-13(%ebp),%eax
	pushl	%eax
	pushl	%edi
	pushl	%esi
	addl	$8, %esi
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putFont8
	addl	$24, %esp
	cmpb	$0, (%ebx)
	jne	L47
	jmp	L49
	.data
_cursor.1:
	.ascii "*..............."
	.ascii "**.............."
	.ascii "*O*............."
	.ascii "*OO*............"
	.ascii "*OOO*..........."
	.ascii "*OOOO*.........."
	.ascii "*OOOOO*........."
	.ascii "*OOOOOO*........"
	.ascii "*OOOOOOO*......."
	.ascii "*OOOO*****......"
	.ascii "*OO*O*.........."
	.ascii "*O*.*O*........."
	.ascii "**..*O*........."
	.ascii "*....*O*........"
	.ascii ".....*O*........"
	.ascii "......*........."
	.text
	.balign 2
.globl _initMouseCursor8
	.def	_initMouseCursor8;	.scl	2;	.type	32;	.endef
_initMouseCursor8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%edi, %edi
	pushl	%ebx
	xorl	%ebx, %ebx
	pushl	%eax
	movb	12(%ebp), %al
	movl	8(%ebp), %esi
	movb	%al, -13(%ebp)
L63:
	xorl	%edx, %edx
L62:
	leal	(%edx,%edi), %eax
	cmpb	$42, _cursor.1(%eax)
	je	L68
L59:
	cmpb	$79, _cursor.1(%eax)
	je	L69
L60:
	cmpb	$46, _cursor.1(%eax)
	je	L70
L57:
	incl	%edx
	cmpl	$15, %edx
	jle	L62
	incl	%ebx
	addl	$16, %edi
	cmpl	$15, %ebx
	jle	L63
	popl	%eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L70:
	movb	-13(%ebp), %cl
	movb	%cl, (%eax,%esi)
	jmp	L57
L69:
	movb	$7, (%eax,%esi)
	jmp	L60
L68:
	movb	$0, (%eax,%esi)
	jmp	L59
	.balign 2
.globl _putblock8_8
	.def	_putblock8_8;	.scl	2;	.type	32;	.endef
_putblock8_8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	subl	$12, %esp
	cmpl	20(%ebp), %esi
	jge	L83
	xorl	%edi, %edi
L81:
	xorl	%ebx, %ebx
	cmpl	16(%ebp), %ebx
	jge	L85
	movl	32(%ebp), %eax
	addl	%edi, %eax
	movl	%eax, -20(%ebp)
L80:
	movl	28(%ebp), %eax
	movl	24(%ebp), %edx
	addl	%esi, %eax
	addl	%ebx, %edx
	imull	12(%ebp), %eax
	addl	%edx, %eax
	movl	8(%ebp), %ecx
	movl	-20(%ebp), %edx
	incl	%ebx
	movb	(%edx), %dl
	movb	%dl, (%eax,%ecx)
	incl	-20(%ebp)
	cmpl	16(%ebp), %ebx
	jl	L80
L85:
	incl	%esi
	addl	36(%ebp), %edi
	cmpl	20(%ebp), %esi
	jl	L81
L83:
	addl	$12, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
LC0:
	.ascii "SHOWSTRING\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$260, %esp
	call	_init_palette
	movl	$2, %ecx
	movswl	4084,%eax
	movswl	4086,%ebx
	leal	-16(%eax), %edx
	pushl	%ebx
	movl	%edx, %eax
	leal	-44(%ebx), %esi
	cltd
	idivl	%ecx
	movl	%eax, %edi
	leal	-268(%ebp), %ebx
	movl	%esi, %eax
	cltd
	idivl	%ecx
	movl	%eax, %esi
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_init_GUI
	pushl	$_font+1088
	pushl	$7
	pushl	$8
	pushl	$8
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putFont8
	addl	$36, %esp
	pushl	$_font+1168
	pushl	$7
	pushl	$8
	pushl	$16
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putFont8
	pushl	$_font+1072
	pushl	$7
	pushl	$8
	pushl	$24
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putFont8
	addl	$48, %esp
	pushl	$_font+1200
	pushl	$7
	pushl	$8
	pushl	$32
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putFont8
	pushl	$_font+1264
	pushl	$7
	pushl	$8
	pushl	$40
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putFont8
	addl	$48, %esp
	pushl	$_font+1328
	pushl	$7
	pushl	$8
	pushl	$48
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putFont8
	pushl	$LC0
	pushl	$7
	pushl	$30
	pushl	$30
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putFont8_asc
	addl	$48, %esp
	pushl	$14
	pushl	%ebx
	call	_initMouseCursor8
	pushl	$16
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	pushl	$16
	pushl	$16
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putblock8_8
	addl	$40, %esp
L87:
	call	_io_hlt
	jmp	L87
	.def	_io_hlt;	.scl	2;	.type	32;	.endef
	.def	_io_store_eflags;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_io_load_eflags;	.scl	2;	.type	32;	.endef
