     1 00000000                                 [FORMAT "WCOFF"]				; 生成对象文件的模式
     2 00000000                                 [INSTRSET "i486p"]				; 使用486兼容指令集
     3 00000000                                 [BITS 32]						; 生成32为模式机器语言
     4 00000000                                 [FILE "helloCFunc.nas"]			; 源文件名信息
     5 00000000                                 
     6 00000000                                 		GLOBAL	_apiPutchar, _apiPutstr0, _apiOpenWindow, _apiPutStrWin, _apiBoxFillWin, _apiInitMalloc, _apiMalloc, _apiFree
     7 00000000                                 		GLOBAL	_apiGetKey, _apiCloseWin, _apiLineWin, _apiPoint, _apiEnd, _apiRefreshWin
     8 00000000                                 		
     9                                          [SECTION .text]
    10 00000000                                 
    11 00000000                                 _apiPutchar:					; void apiPutchar(int c)
    12 00000000 BA 00000001                     		MOV		EDX,1			; 功能号1
    13 00000005 8A 44 24 04                     		MOV		AL,[ESP+4]		; c
    14 00000009 CD 40                           		INT		0x40
    15 0000000B C3                              		RET
    16 0000000C                                 		
    17 0000000C                                 _apiPutstr0:					; void apiPutstr0(char *s)
    18 0000000C 53                              		PUSH	EBX
    19 0000000D BA 00000002                     		MOV		EDX,2
    20 00000012 8B 5C 24 08                     		MOV		EBX,[ESP+8]		; s
    21 00000016 CD 40                           		INT		0x40
    22 00000018 5B                              		POP		EBX
    23 00000019 C3                              		RET
    24 0000001A                                 		
    25 0000001A                                 _apiOpenWindow:					; int apiOpenWindow(char *buf, int width, int height, int colInvNum, char *title);
    26 0000001A 57                              		PUSH	EDI
    27 0000001B 56                              		PUSH	ESI
    28 0000001C 53                              		PUSH	EBX
    29 0000001D BA 00000005                     		MOV		EDX,5			; 功能号5打印窗口
    30 00000022 8B 5C 24 10                     		MOV		EBX,[ESP+16]	; buf
    31 00000026 8B 74 24 14                     		MOV		ESI,[ESP+20]	; width
    32 0000002A 8B 7C 24 18                     		MOV		EDI,[ESP+24]	; height
    33 0000002E 8B 44 24 1C                     		MOV		EAX,[ESP+28]	; colInvNum
    34 00000032 8B 4C 24 20                     		MOV		ECX,[ESP+32]	; title
    35 00000036 CD 40                           		INT		0x40
    36 00000038 5B                              		POP		EBX
    37 00000039 5E                              		POP		ESI
    38 0000003A 5F                              		POP		EDI
    39 0000003B C3                              		RET
    40 0000003C                                 		
    41 0000003C                                 _apiPutStrWin:					; void apiPutStrWin(int win, int x, int y, int col, int len, char *str);
    42 0000003C 57                              		PUSH	EDI
    43 0000003D 56                              		PUSH	ESI
    44 0000003E 55                              		PUSH	EBP
    45 0000003F 53                              		PUSH	EBX
    46 00000040 BA 00000006                     		MOV		EDX,6			; 功能号6
    47 00000045 8B 5C 24 14                     		MOV		EBX,[ESP+20]	; win 图层句柄
    48 00000049 8B 74 24 18                     		MOV		ESI,[ESP+24]	; x
    49 0000004D 8B 7C 24 1C                     		MOV		EDI,[ESP+28]	; y
    50 00000051 8B 44 24 20                     		MOV		EAX,[ESP+32]	; col
    51 00000055 8B 4C 24 24                     		MOV		ECX,[ESP+36]	; len
    52 00000059 8B 6C 24 28                     		MOV		EBP,[ESP+40]	; str
    53 0000005D CD 40                           		INT		0x40
    54 0000005F 5B                              		POP		EBX
    55 00000060 5D                              		POP		EBP
    56 00000061 5E                              		POP		ESI
    57 00000062 5F                              		POP		EDI
    58 00000063 C3                              		RET
    59 00000064                                 		
    60 00000064                                 _apiBoxFillWin:					; void apiBoxFillWin(int win, int startX, int startY, int endX, int endY, int col);
    61 00000064 57                              		PUSH	EDI
    62 00000065 56                              		PUSH	ESI
    63 00000066 55                              		PUSH	EBP
    64 00000067 53                              		PUSH	EBX
    65 00000068 BA 00000007                     		MOV		EDX,7			; 功能号7
    66 0000006D 8B 5C 24 14                     		MOV		EBX,[ESP+20]	; win 图层句柄
    67 00000071 8B 44 24 18                     		MOV		EAX,[ESP+24]	; startX
    68 00000075 8B 4C 24 1C                     		MOV		ECX,[ESP+28]	; startY
    69 00000079 8B 74 24 20                     		MOV		ESI,[ESP+32]	; endX
    70 0000007D 8B 7C 24 24                     		MOV		EDI,[ESP+36]	; endY
    71 00000081 8B 6C 24 28                     		MOV		EBP,[ESP+40]	; col
    72 00000085 CD 40                           		INT		0x40
    73 00000087 5B                              		POP		EBX
    74 00000088 5D                              		POP		EBP
    75 00000089 5E                              		POP		ESI
    76 0000008A 5F                              		POP		EDI
    77 0000008B C3                              		RET
    78 0000008C                                 		
    79 0000008C                                 _apiInitMalloc:					; void apiInitMalloc();
    80 0000008C 53                              		PUSH	EBX
    81 0000008D BA 00000008                     		MOV		EDX,8			; 功能号8
    82 00000092 2E 8B 1D 00000020               		MOV		EBX,[CS:0x0020]	; 在应用程序文件中读取0x0020位置记录的当前malloc可分配内存空间起始地址（memsegtable管理空间起始地址）
    83 00000099 89 D8                           		MOV		EAX,EBX
    84 0000009B 05 00008000                     		ADD		EAX,32*1024		; 加上32KB
    85 000000A0 2E 8B 0D 00000000               		MOV		ECX,[CS:0x0000]	; 在应用程序文件中读取0x0000位置读取数据段的大小（memsegtable管理的字节数）
    86 000000A7 29 C1                           		SUB		ECX,EAX
    87 000000A9 CD 40                           		INT		0x40
    88 000000AB 5B                              		POP		EBX
    89 000000AC C3                              		RET
    90 000000AD                                 
    91 000000AD                                 _apiMalloc:						; char *apiMalloc(int size);
    92 000000AD 53                              		PUSH	EBX
    93 000000AE BA 00000009                     		MOV		EDX,9			; 功能号9
    94 000000B3 2E 8B 1D 00000020               		MOV		EBX,[CS:0x0020]
    95 000000BA 8B 4C 24 08                     		MOV		ECX,[ESP+8]		; size
    96 000000BE CD 40                           		INT		0x40
    97 000000C0 5B                              		POP		EBX
    98 000000C1 C3                              		RET
    99 000000C2                                 		
   100 000000C2                                 _apiFree:						; void apiFree(char *addr, int size);
   101 000000C2 53                              		PUSH	EBX
   102 000000C3 BA 0000000A                     		MOV		EDX,10			; 功能号10
   103 000000C8 2E 8B 1D 00000020               		MOV		EBX,[CS:0x0020]
   104 000000CF 8B 44 24 08                     		MOV		EAX,[ESP+8]		; addr
   105 000000D3 8B 4C 24 0C                     		MOV		ECX,[ESP+12]	; size
   106 000000D7 CD 40                           		INT		0x40
   107 000000D9 5B                              		POP		EBX
   108 000000DA C3                              		RET
   109 000000DB                                 		
   110 000000DB                                 _apiPoint:						; void apiPoint(int sheet, int x, int y, int col);
   111 000000DB 57                              		PUSH	EDI
   112 000000DC 56                              		PUSH	ESI
   113 000000DD 53                              		PUSH	EBX
   114 000000DE BA 0000000B                     		MOV		EDX,11			; 功能号11
   115 000000E3 8B 5C 24 10                     		MOV		EBX,[ESP+16]	; sheet图层句柄
   116 000000E7 8B 74 24 14                     		MOV		ESI,[ESP+20]	; x
   117 000000EB 8B 7C 24 18                     		MOV		EDI,[ESP+24]	; y
   118 000000EF 8B 44 24 1C                     		MOV		EAX,[ESP+28]	; col
   119 000000F3 CD 40                           		INT		0x40
   120 000000F5 5B                              		POP		EBX
   121 000000F6 5E                              		POP		ESI
   122 000000F7 5F                              		POP		EDI
   123 000000F8 C3                              		RET
   124 000000F9                                 
   125 000000F9                                 _apiRefreshWin:					; void apiRefreshWin(int sheet, int startX, int startY, int endX, int endY);
   126 000000F9 57                              		PUSH	EDI
   127 000000FA 56                              		PUSH	ESI
   128 000000FB 53                              		PUSH	EBX
   129 000000FC BA 0000000C                     		MOV		EDX,12			; 功能号12
   130 00000101 8B 5C 24 10                     		MOV		EBX,[ESP+16]	; sheet 图层句柄
   131 00000105 8B 44 24 14                     		MOV		EAX,[ESP+20]	; startX
   132 00000109 8B 4C 24 18                     		MOV		ECX,[ESP+24]	; startY
   133 0000010D 8B 74 24 1C                     		MOV		ESI,[ESP+28]	; endX
   134 00000111 8B 7C 24 20                     		MOV		EDI,[ESP+32]	; endY
   135 00000115 CD 40                           		INT		0x40
   136 00000117 5B                              		POP		EBX
   137 00000118 5E                              		POP		ESI
   138 00000119 5F                              		POP		EDI
   139 0000011A C3                              		RET
   140 0000011B                                 		
   141 0000011B                                 _apiLineWin:					; void apiLineWin(int sheet, int startX, int startY, int endX, int endY, int col);
   142 0000011B 57                              		PUSH	EDI
   143 0000011C 56                              		PUSH	ESI
   144 0000011D 55                              		PUSH	EBP
   145 0000011E 53                              		PUSH	EBX
   146 0000011F BA 0000000D                     		MOV		EDX,13			; 功能号13
   147 00000124 8B 5C 24 14                     		MOV		EBX,[ESP+20]	; sheet
   148 00000128 8B 44 24 18                     		MOV		EAX,[ESP+24]	; startX
   149 0000012C 8B 4C 24 1C                     		MOV		ECX,[ESP+28]	; startY
   150 00000130 8B 74 24 20                     		MOV		ESI,[ESP+32]	; endX
   151 00000134 8B 7C 24 24                     		MOV		EDI,[ESP+36]	; endY
   152 00000138 8B 6C 24 28                     		MOV		EBP,[ESP+40]	; col
   153 0000013C CD 40                           		INT		0x40
   154 0000013E 5B                              		POP		EBX
   155 0000013F 5D                              		POP		EBP
   156 00000140 5E                              		POP		ESI
   157 00000141 5F                              		POP		EDI
   158 00000142 C3                              		RET
   159 00000143                                 		
   160 00000143                                 _apiCloseWin:					; void apiCloseWin(int sheet);
   161 00000143 53                              		PUSH	EBX
   162 00000144 BA 0000000E                     		MOV		EDX,14			; 功能号14
   163 00000149 8B 5C 24 08                     		MOV		EBX,[ESP+8]		; sheet
   164 0000014D CD 40                           		INT		0x40
   165 0000014F 5B                              		POP		EBX
   166 00000150 C3                              		RET
   167 00000151                                 		
   168 00000151                                 _apiGetKey:						; int apiGetKey(int mode);
   169 00000151 BA 0000000F                     		MOV		EDX,15
   170 00000156 8B 44 24 04                     		MOV		EAX,[ESP+4]		; mode
   171 0000015A CD 40                           		INT		0x40
   172 0000015C C3                              		RET
   173 0000015D                                 
   174 0000015D                                 _apiEnd:						; void apiEnd()
   175 0000015D BA 00000004                     		MOV		EDX,4
   176 00000162 CD 40                           		INT		0x40
